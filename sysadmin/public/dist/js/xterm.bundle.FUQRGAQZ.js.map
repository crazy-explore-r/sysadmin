{
  "version": 3,
  "sources": ["../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/universalModuleDefinition", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/AccessibilityManager.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Clipboard.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/ColorContrastCache.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Lifecycle.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Linkifier.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/LocalizableStrings.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/OscLinkProvider.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/RenderDebouncer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Terminal.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/TimeBasedDebouncer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/Viewport.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/ColorZoneStore.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/CompositionHelper.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/Mouse.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/input/MoveToCell.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRenderer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/dom/WidthCache.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/Constants.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/RendererUtils.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/renderer/shared/SelectionRenderModel.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/selection/SelectionModel.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharSizeService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CharacterJoinerService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/CoreBrowserService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/LinkProviderService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/MouseService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/RenderService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/SelectionService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/Services.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/services/ThemeService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CircularList.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Clone.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Color.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/CoreTerminal.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/EventEmitter.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/InputHandler.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Lifecycle.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/MultiKeyMap.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/Platform.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/SortedList.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/TaskQueue.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/WindowsMode.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/AttributeData.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Buffer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferLine.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferRange.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferReflow.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/BufferSet.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/CellData.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Constants.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/buffer/Marker.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/Charsets.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/data/EscapeSequences.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/Keyboard.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/TextDecoder.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/UnicodeV6.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/WriteBuffer.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/input/XParseColor.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Constants.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/DcsParser.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/EscapeSequenceParser.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/OscParser.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/parser/Params.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/AddonManager.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferApiView.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferLineApiView.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/BufferNamespaceApi.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/ParserApi.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/public/UnicodeApi.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/BufferService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CharsetService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreMouseService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/CoreService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/DecorationService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/InstantiationService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/LogService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OptionsService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/OscLinkService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/ServiceRegistry.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/Services.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/common/services/UnicodeService.ts", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/webpack/bootstrap", "../../../../../apps/sysadmin/node_modules/@xterm/xterm/lib/webpack:/@xterm/xterm/src/browser/public/Terminal.ts", "../../../../../apps/sysadmin/sysadmin/public/js/xterm.bundle.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\n// Turn this on to unhide the accessibility tree and display it under\n// (instead of overlapping with) the terminal.\nconst DEBUG = false;\n\nexport class AccessibilityManager extends Disposable {\n  private _debugRootContainer: HTMLElement | undefined;\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _rowColumns: WeakMap<HTMLElement, number[]> = new WeakMap();\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n\n    if (DEBUG) {\n      this._accessibilityContainer.classList.add('debug');\n      this._rowContainer.classList.add('debug');\n\n      // Use a `<div class=\"xterm\">` container so that the css will still apply.\n      this._debugRootContainer = document.createElement('div');\n      this._debugRootContainer.classList.add('xterm');\n\n      this._debugRootContainer.appendChild(document.createTextNode('------start a11y------'));\n      this._debugRootContainer.appendChild(this._accessibilityContainer);\n      this._debugRootContainer.appendChild(document.createTextNode('------end a11y------'));\n\n      this._terminal.element.insertAdjacentElement('afterend', this._debugRootContainer);\n    } else {\n      this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n    }\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(addDisposableDomListener(document, 'selectionchange', () => this._handleSelectionChange()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      if (DEBUG) {\n        this._debugRootContainer!.remove();\n      } else {\n        this._accessibilityContainer.remove();\n      }\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const line = buffer.lines.get(buffer.ydisp + i);\n      const columns: number[] = [];\n      const lineData = line?.translateToString(true, undefined, undefined, columns) || '';\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n          this._rowColumns.set(element, [0, 1]);\n        } else {\n          element.textContent = lineData;\n          this._rowColumns.set(element, columns);\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleSelectionChange(): void {\n    if (this._rowElements.length === 0) {\n      return;\n    }\n\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      // Only do something when the anchorNode is inside the row container. This\n      // behavior mirrors what we do with mouse --- if the mouse clicks\n      // somewhere outside of the terminal, we don't clear the selection.\n      if (this._rowContainer.contains(selection.anchorNode)) {\n        this._terminal.clearSelection();\n      }\n      return;\n    }\n\n    if (!selection.anchorNode || !selection.focusNode) {\n      console.error('anchorNode and/or focusNode are null');\n      return;\n    }\n\n    // Sort the two selection points in document order.\n    let begin = { node: selection.anchorNode, offset: selection.anchorOffset };\n    let end = { node: selection.focusNode, offset: selection.focusOffset };\n    if ((begin.node.compareDocumentPosition(end.node) & Node.DOCUMENT_POSITION_PRECEDING) || (begin.node === end.node && begin.offset > end.offset) ) {\n      [begin, end] = [end, begin];\n    }\n\n    // Clamp begin/end to the inside of the row container.\n    if (begin.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING)) {\n      begin = { node: this._rowElements[0].childNodes[0], offset: 0 };\n    }\n    if (!this._rowContainer.contains(begin.node)) {\n      // This happens when `begin` is below the last row.\n      return;\n    }\n    const lastRowElement = this._rowElements.slice(-1)[0];\n    if (end.node.compareDocumentPosition(lastRowElement) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING)) {\n      end = {\n        node: lastRowElement,\n        offset: lastRowElement.textContent?.length ?? 0\n      };\n    }\n    if (!this._rowContainer.contains(end.node)) {\n      // This happens when `end` is above the first row.\n      return;\n    }\n\n    const toRowColumn = ({ node, offset }: typeof begin): {row: number, column: number} | null => {\n      // `node` is either the row element or the Text node inside it.\n      const rowElement: any = node instanceof Text ? node.parentNode : node;\n      let row = parseInt(rowElement?.getAttribute('aria-posinset'), 10) - 1;\n      if (isNaN(row)) {\n        console.warn('row is invalid. Race condition?');\n        return null;\n      }\n\n      const columns = this._rowColumns.get(rowElement);\n      if (!columns) {\n        console.warn('columns is null. Race condition?');\n        return null;\n      }\n\n      let column = offset < columns.length ? columns[offset] : columns.slice(-1)[0] + 1;\n      if (column >= this._terminal.cols) {\n        ++row;\n        column = 0;\n      }\n      return {\n        row,\n        column\n      };\n    };\n\n    const beginRowColumn = toRowColumn(begin);\n    const endRowColumn = toRowColumn(end);\n\n    if (!beginRowColumn || !endRowColumn) {\n      return;\n    }\n\n    if (beginRowColumn.row > endRowColumn.row || (beginRowColumn.row === endRowColumn.row && beginRowColumn.column >= endRowColumn.column)) {\n      // This should not happen unless we have some bugs.\n      throw new Error('invalid range');\n    }\n\n    this._terminal.select(\n      beginRowColumn.column,\n      beginRowColumn.row,\n      (endRowColumn.row - beginRowColumn.row) * this._terminal.cols - beginRowColumn.column + endRowColumn.column\n    );\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { ILinkProviderService, IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier extends Disposable implements ILinkifier2 {\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILinkProviderService private readonly _linkProviderService: ILinkProviderService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n      // Clear out link providers as they could easily cause an embedder memory leak\n      this._activeProviderReplies?.clear();\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviderService.linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._lastMouseEvent) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n        // Sanity check, this shouldn't happen in practice as this listener would be disposed\n        if (!this._currentLink) {\n          return;\n        }\n        // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n        // cleared.\n        const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n        const end = this._bufferService.buffer.ydisp + 1 + e.end;\n        // Only clear the link if the viewport change happened on this line\n        if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n          this._clearCurrentLink(start, end);\n          if (this._lastMouseEvent) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }\n      }));\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink } from 'browser/Types';\nimport { ILinkProvider } from 'browser/services/Services';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier } from './Linkifier';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, CustomWheelEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, ILinkProviderService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { channels, color } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { LinkProviderService } from 'browser/services/LinkProviderService';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  public linkifier: ILinkifier2 | undefined;\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n  private _customWheelEventHandler: CustomWheelEventHandler | undefined;\n\n  // Browser services\n  private _decorationService: DecorationService;\n  private _linkProviderService: ILinkProviderService;\n\n  // Optional browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n    this._linkProviderService = this._instantiationService.createInstance(LinkProviderService);\n    this._instantiationService.setService(ILinkProviderService, this._linkProviderService);\n    this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const colorRgb = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(colorRgb)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = channels.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = channels.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: FocusEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.register(addDisposableDomListener(this.screenElement, 'mousemove', (ev: MouseEvent) => this.updateCursorStyle(ev)));\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: FocusEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.linkifier = this.register(this._instantiationService.createInstance(Linkifier, this.screenElement));\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier!);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          if (self._customWheelEventHandler && self._customWheelEventHandler(ev as WheelEvent) === false) {\n            return false;\n          }\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (this._customWheelEventHandler && this._customWheelEventHandler(ev) === false) {\n        return false;\n      }\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent | MouseEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public attachCustomWheelEventHandler(customWheelEventHandler: CustomWheelEventHandler): void {\n    this._customWheelEventHandler = customWheelEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._linkProviderService.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n  private _selectionRenderModel: ISelectionRenderModel = createSelectionRenderModel();\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n    this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode);\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    this._selectionRenderModel.update(this._terminal, start, end, columnSelectMode);\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = this._selectionRenderModel.viewportStartRow;\n    const viewportEndRow = this._selectionRenderModel.viewportEndRow;\n    const viewportCappedStartRow = this._selectionRenderModel.viewportCappedStartRow;\n    const viewportCappedEndRow = this._selectionRenderModel.viewportCappedEndRow;\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    const left = colStart * this.dimensions.css.cell.width;\n    let width = this.dimensions.css.cell.width * (colEnd - colStart);\n    if (left + width > this.dimensions.css.canvas.width) {\n      width = this.dimensions.css.canvas.width - left;\n    }\n\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${left}px`;\n    element.style.width = `${width}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { channels, color } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = channels.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = channels.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || treatGlyphAsBackgroundColor(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      if (this._flat[cp] !== WidthCacheSettings.FLAT_UNSET) {\n        return this._flat[cp];\n      }\n      const width = this._measure(c, 0);\n      if (width > 0) {\n        this._flat[cp] = width;\n      }\n      return width;\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      if (width > 0) {\n        this._holey!.set(key, width);\n      }\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    try {\n      this._measureStrategy = this.register(new TextMetricsMeasureStrategy(this._optionsService));\n    } catch {\n      this._measureStrategy = this.register(new DomMeasureStrategy(document, parentElement, this._optionsService));\n    }\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): Readonly<IMeasureResult>;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\nconst enum DomMeasureStrategyConstants {\n  REPEAT = 32\n}\n\nabstract class BaseMeasureStategy extends Disposable implements IMeasureStrategy {\n  protected _result: IMeasureResult = { width: 0, height: 0 };\n\n  protected _validateAndSet(width: number | undefined, height: number | undefined): void {\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (width !== undefined && width > 0 && height !== undefined && height > 0) {\n      this._result.width = width;\n      this._result.height = height;\n    }\n  }\n\n  public abstract measure(): Readonly<IMeasureResult>;\n}\n\nclass DomMeasureStrategy extends BaseMeasureStategy {\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(DomMeasureStrategyConstants.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    this._validateAndSet(Number(this._measureElement.offsetWidth) / DomMeasureStrategyConstants.REPEAT, Number(this._measureElement.offsetHeight));\n\n    return this._result;\n  }\n}\n\nclass TextMetricsMeasureStrategy extends BaseMeasureStategy {\n  private _canvas: OffscreenCanvas;\n  private _ctx: OffscreenCanvasRenderingContext2D;\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    // This will throw if any required API is not supported\n    this._canvas = new OffscreenCanvas(100, 100);\n    this._ctx = this._canvas.getContext('2d')!;\n    const a = this._ctx.measureText('W');\n    if (!('width' in a && 'fontBoundingBoxAscent' in a && 'fontBoundingBoxDescent' in a)) {\n      throw new Error('Required font metrics not supported');\n    }\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;\n    const metrics = this._ctx.measureText('W');\n    this._validateAndSet(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "import { ILinkProvider, ILinkProviderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport class LinkProviderService extends Disposable implements ILinkProviderService {\n  declare public serviceBrand: undefined;\n\n  public readonly linkProviders: ILinkProvider[] = [];\n\n  constructor() {\n    super();\n    this.register(toDisposable(() => this.linkProviders.length = 0));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this.linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this.linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this.linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange = this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end), coreBrowserService);\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    this._registerIntersectionObserver(coreBrowserService.window, screenElement);\n    this.register(coreBrowserService.onWindowChange((w) => this._registerIntersectionObserver(w, screenElement)));\n  }\n\n  private _registerIntersectionObserver(w: Window & typeof globalThis, screenElement: HTMLElement): void {\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in w) {\n      const observer = new w.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this._observerDisposable.value = toDisposable(() => observer.disconnect());\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value?.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ILink, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n\n\nexport const ILinkProviderService = createDecorator<ILinkProviderService>('LinkProviderService');\nexport interface ILinkProviderService extends IDisposable {\n  serviceBrand: undefined;\n  readonly linkProviders: ReadonlyArray<ILinkProvider>;\n  registerLinkProvider(linkProvider: ILinkProvider): IDisposable;\n}\nexport interface ILinkProvider {\n  provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public input(data: string, wasUserInput: boolean = true): void {\n    this.coreService.triggerDataEvent(data, wasUserInput);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '\u25C6'\n  'a': '\\u2592', // '\u2592'\n  'b': '\\u2409', // '\u2409' (HT)\n  'c': '\\u240c', // '\u240C' (FF)\n  'd': '\\u240d', // '\u240D' (CR)\n  'e': '\\u240a', // '\u240A' (LF)\n  'f': '\\u00b0', // '\u00B0'\n  'g': '\\u00b1', // '\u00B1'\n  'h': '\\u2424', // '\u2424' (NL)\n  'i': '\\u240b', // '\u240B' (VT)\n  'j': '\\u2518', // '\u2518'\n  'k': '\\u2510', // '\u2510'\n  'l': '\\u250c', // '\u250C'\n  'm': '\\u2514', // '\u2514'\n  'n': '\\u253c', // '\u253C'\n  'o': '\\u23ba', // '\u23BA'\n  'p': '\\u23bb', // '\u23BB'\n  'q': '\\u2500', // '\u2500'\n  'r': '\\u23bc', // '\u23BC'\n  's': '\\u23bd', // '\u23BD'\n  't': '\\u251c', // '\u251C'\n  'u': '\\u2524', // '\u2524'\n  'v': '\\u2534', // '\u2534'\n  'w': '\\u252c', // '\u252C'\n  'x': '\\u2502', // '\u2502'\n  'y': '\\u2264', // '\u2264'\n  'z': '\\u2265', // '\u2265'\n  '{': '\\u03c0', // '\u03C0'\n  '|': '\\u2260', // '\u2260'\n  '}': '\\u00a3', // '\u00A3'\n  '~': '\\u00b7'  // '\u00B7'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '\u00A3'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '\u00A3',\n  '@': '\u00BE',\n  '[': 'ij',\n  '\\\\': '\u00BD',\n  ']': '|',\n  '{': '\u00A8',\n  '|': 'f',\n  '}': '\u00BC',\n  '~': '\u00B4'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E9',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '\u00A3',\n  '@': '\u00E0',\n  '[': '\u00B0',\n  '\\\\': '\u00E7',\n  ']': '\u00A7',\n  '{': '\u00E9',\n  '|': '\u00F9',\n  '}': '\u00E8',\n  '~': '\u00A8'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': '\u00E0',\n  '[': '\u00E2',\n  '\\\\': '\u00E7',\n  ']': '\u00EA',\n  '^': '\u00EE',\n  '`': '\u00F4',\n  '{': '\u00E9',\n  '|': '\u00F9',\n  '}': '\u00E8',\n  '~': '\u00FB'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '\u00A7',\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00DC',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00FC',\n  '~': '\u00DF'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '\u00A3',\n  '@': '\u00A7',\n  '[': '\u00B0',\n  '\\\\': '\u00E7',\n  ']': '\u00E9',\n  '`': '\u00F9',\n  '{': '\u00E0',\n  '|': '\u00F2',\n  '}': '\u00E8',\n  '~': '\u00EC'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': '\u00C4',\n  '[': '\u00C6',\n  '\\\\': '\u00D8',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E4',\n  '{': '\u00E6',\n  '|': '\u00F8',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '\u00A3',\n  '@': '\u00A7',\n  '[': '\u00A1',\n  '\\\\': '\u00D1',\n  ']': '\u00BF',\n  '{': '\u00B0',\n  '|': '\u00F1',\n  '}': '\u00E7'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': '\u00C9',\n  '[': '\u00C4',\n  '\\\\': '\u00D6',\n  ']': '\u00C5',\n  '^': '\u00DC',\n  '`': '\u00E9',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00E5',\n  '~': '\u00FC'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': '\u00F9',\n  '@': '\u00E0',\n  '[': '\u00E9',\n  '\\\\': '\u00E7',\n  ']': '\u00EA',\n  '^': '\u00EE',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': '\u00E8',\n  '`': '\u00F4',\n  '{': '\u00E4',\n  '|': '\u00F6',\n  '}': '\u00FC',\n  '~': '\u00FB'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      result.key = ev.ctrlKey ? '\\b' : C0.DEL; // ^H or ^?\n      if (ev.altKey) {\n        result.key = C0.ESC + result.key;\n      }\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public input(data: string, wasUserInput: boolean = true): void {\n    this._core.input(data, wasUserInput);\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public attachCustomWheelEventHandler(customWheelEventHandler: (event: WheelEvent) => boolean): void {\n    this._core.attachCustomWheelEventHandler(customWheelEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "console.log(\"From Bundle\");\n\nimport { Terminal } from '@xterm/xterm';\n\n// Ensure Terminal is globally accessible\nwindow.Terminal = Terminal;\n\n// Assuming this is within xterm.bundle.js or a similar script where Terminal is defined\nwindow.initializeTerminal = function() {\n    var terminal = new Terminal();\n    terminal.open(document.getElementById('terminal-container'));\n    terminal.writeln('SSH Terminal Ready...');\n\n    let currentCommand = '';\n    terminal.onKey(({ key, domEvent }) => {\n        if (domEvent.keyCode === 13) { // Enter key\n            terminal.writeln(\"\"); // Move to a new line\n            if (currentCommand.trim()) {\n                // Replace this with the actual function to send the command\n                executeSSHCommand(field.get_value(), currentCommand);\n            }\n            currentCommand = ''; // Reset command after sending\n        } else if (domEvent.keyCode === 8) { // Backspace key\n            currentCommand = currentCommand.slice(0, -1); // Remove last character\n        } else {\n            currentCommand += key; // Append pressed key to current command\n            terminal.write(key); // Echo pressed key to terminal\n        }\n    });\n};\n"],
  "mappings": "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AAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,I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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "globalThis", "e", "t", "s", "r", "n", "o", "h", "l", "AccessibilityManager", "Disposable", "_terminal", "instantiationService", "super", "_coreBrowserService", "_renderService", "_rowColumns", "WeakMap", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "mainDocument", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "addDisposableDomListener", "document", "_handleSelectionChange", "onDprChange", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "line", "get", "ydisp", "columns", "lineData", "translateToString", "undefined", "posInSet", "innerText", "set", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "selection", "getSelection", "isCollapsed", "contains", "anchorNode", "clearSelection", "focusNode", "console", "error", "begin", "node", "offset", "anchorOffset", "focusOffset", "compareDocumentPosition", "Node", "DOCUMENT_POSITION_PRECEDING", "DOCUMENT_POSITION_CONTAINED_BY", "DOCUMENT_POSITION_FOLLOWING", "childNodes", "lastRowElement", "slice", "toRowColumn", "rowElement", "Text", "parentNode", "row", "parseInt", "isNaN", "warn", "column", "cols", "beginRowColumn", "endRowColumn", "select", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IInstantiationService", "ICoreBrowserService", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "_color", "TwoKeyMap", "_css", "bg", "fg", "clear", "type", "handler", "options", "disposed", "dispose", "Linkifier", "currentLink", "_currentLink", "_element", "_mouseService", "_bufferService", "_linkProviderService", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_activeProviderReplies", "_clearCurrentLink", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "forEach", "reply", "linkWithState", "Map", "linkProvided", "linkProvider", "linkProviders", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "has", "splice", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "fire", "leave", "lower", "upper", "current", "mouseService", "coords", "getCoords", "x1", "y1", "x2", "y2", "IMouseService", "IBufferService", "ILinkProviderService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "window", "open", "opener", "location", "href", "IOptionsService", "IOscLinkService", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "d", "_", "u", "f", "p", "m", "S", "C", "b", "w", "E", "k", "L", "D", "R", "A", "B", "T", "M", "O", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "_decorationService", "_instantiationService", "createInstance", "DecorationService", "setService", "IDecorationService", "LinkProviderService", "registerLinkProvider", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "colorRgb", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "channels", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "ownerDocument", "defaultView", "_document", "documentOverride", "Document", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "updateCursorStyle", "_helperContainer", "isChromeOS", "CoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "MouseService", "linkifier", "hasRenderer", "setRenderer", "_createRenderer", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "self", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "_customWheelEventHandler", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "customWheelEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "setSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "selectAll", "selectLines", "shouldIgnoreComposition", "isMac", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "P", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "setTimeout", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "translateBufferLineToString", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "g", "_terminalClass", "_selectionRenderModel", "createSelectionRenderModel", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "c", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "update", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isInvisible", "isCursorHidden", "isFocused", "isDim", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "rgba", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "$", "className", "minimumContrastRatio", "treatGlyphAsBackgroundColor", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "currentOffset", "SelectionRenderModel", "constructor", "terminal", "viewportY", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "TextMetricsMeasureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "BaseMeasureStategy", "_result", "_parentElement", "_measureElement", "_validateAndSet", "Number", "OffscreenCanvas", "measureText", "metrics", "fontBoundingBoxAscent", "fontBoundingBoxDescent", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_window", "_isFocused", "_cachedIsFocused", "_screenDprMonitor", "ScreenDprMonitor", "_onDprChange", "_onWindowChange", "onWindowChange", "setWindow", "devicePixelRatio", "hasFocus", "queueMicrotask", "_parentWindow", "_windowResizeListener", "_outerListener", "_setDprAndFireIfDiffers", "_currentDevicePixelRatio", "_updateDpr", "_setWindowResizeListener", "clearListener", "parentWindow", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "providerIndex", "indexOf", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_observerDisposable", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "_registerIntersectionObserver", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "wasUserInput", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "listener", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "viewportEnd", "viewportStart", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodepoint", "precedingJoinState", "ch", "currentInfo", "charProperties", "extractWidth", "shouldJoin", "extractShouldJoin", "oldWidth", "stringFromCodePoint", "addLineToLink", "oldRow", "oldCol", "_eraseAttrData", "BufferLine", "copyCellsFrom", "addCodepointToCell", "delta", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "joinState", "idata", "itext", "codePointAt", "tlength", "copyWithin", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "process", "userAgent", "navigator", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "getUnderlineVariantOffset", "underlineVariantOffset", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "attrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "outColumns", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "preceding", "wcwidth", "createPropertyValue", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "loadedAddon", "_wrappedAddonDispose", "_buffer", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "__spreadValues", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "precedingInfo", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "_verifyIntegers", "attachCustomKeyEventHandler", "attachCustomWheelEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "import_xterm", "terminal", "currentCommand", "key", "domEvent"]
}
